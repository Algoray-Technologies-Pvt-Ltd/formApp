import 'package:flutter/material.dart';
import 'package:formapp/enquiryCumQuatation/view/widget/EnqDate.dart';
import 'package:formapp/enquiryCumQuatation/view/widget/EnqRecDate.dart';
import 'package:formapp/enquiryCumQuatation/view/widget/OrderRecivedDate.dart';
import 'package:formapp/enquiryCumQuatation/view/widget/QuoDueDate.dart';
import 'package:formapp/enquiryCumQuatation/view/widget/allitemsFeild.dart';
import 'package:formapp/enquiryCumQuatation/view/widget/customernameWidget.dart';
import 'package:formapp/enquiryCumQuatation/view/widget/quoDate.dart';
import 'package:formapp/main.dart';
import 'package:formapp/widgets/ktextFeild.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:formapp/enquiryCumQuatation/bloc/bloc/enquiry_cum_quatation_bloc.dart';

import '../../widgets/KAutoText.dart';

class EnquiryCumQuatationCreate extends StatelessWidget {
  const EnquiryCumQuatationCreate({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      floatingActionButton: FloatingActionButton(
        backgroundColor: primaryColor,
        onPressed: () {
          context.read<EnquiryCumQuatationBloc>().add(SaveEvent());
          Navigator.of(context).pop();
        },
        child: const Icon(Icons.save),
      ),
      appBar: AppBar(
        elevation: 0,
        title: Text('Save Details'),
        centerTitle: true,
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(8.0),
          child: Container(
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(5),
                border: Border.all(width: 2, color: Colors.grey)),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.end,
              children: [
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: SizedBox(
                    width: MediaQuery.of(context).size.width / 6,
                    child: Table(
                      border: TableBorder.all(
                          color: Colors.grey,
                          width: 1.5,
                          borderRadius: BorderRadius.circular(5)),
                      columnWidths: const {
                        0: FlexColumnWidth(5),
                        1: FlexColumnWidth(5),
                      },
                      children: [
                        TableRow(children: [
                          const Text(
                            "FT No.",
                            style: TextStyle(fontSize: 15.0),
                          ),
                          AutoGeneratedText(autoGeneratedValue: 1),
                        ]),
                        TableRow(children: [
                          const Text(
                            "Rev No.",
                            style: TextStyle(fontSize: 15.0),
                          ),
                          AutoGeneratedText(autoGeneratedValue: 25),
                        ]),
                        TableRow(children: [
                          const Text(
                            "Page No.",
                            style: TextStyle(fontSize: 15.0),
                          ),
                          AutoGeneratedText(autoGeneratedValue: 2),
                        ]),
                        TableRow(children: [
                          const Text(
                            "Date",
                            style: TextStyle(fontSize: 15.0),
                          ),
                          Text(
                            "${DateTime.now().day}/${DateTime.now().month}/${DateTime.now().year}",
                            style: const TextStyle(fontSize: 15.0),
                          ),
                        ]),
                      ],
                    ),
                  ),
                ),
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Container(
                    padding: const EdgeInsets.all(8.0),
                    decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(5),
                        border: Border.all(width: 2, color: Colors.grey)),
                    alignment: Alignment.center,
                    width: MediaQuery.of(context).size.width,
                    child: Wrap(children: [
                      EnqRecDateECQWidget(),
                      KTextField(
                        onChanged: (value) {
                          context
                              .read<EnquiryCumQuatationBloc>()
                              .add(EnquiryNOEvent(enquiry: value));
                        },
                        initialText: '',
                        hintText: 'Enq.No.',
                      ),
                      EnqDateECQWidget(),
                      KTextField(
                        onChanged: (value) {
                          context
                              .read<EnquiryCumQuatationBloc>()
                              .add(ModeofEnquiryEvent(modeofEnquiry: value));
                        },
                        initialText: '',
                        hintText: 'Mode of Enquiry',
                      ),
                      KTextField(
                        onChanged: (value) {
                          context
                              .read<EnquiryCumQuatationBloc>()
                              .add(CoordinatorNameEvent(name: value));
                        },
                        initialText: '',
                        hintText: 'Coordinator Name',
                      ),
                      CustomerEcqReNmaeWidget(),
                      DescriptionJob(),
                      KTextField(
                        onChanged: (value) {
                          context
                              .read<EnquiryCumQuatationBloc>()
                              .add(EnqQtyEvent(qty: value));
                        },
                        initialText: '',
                        hintText: 'Enq.Qty',
                      ),
                      KTextField(
                        onChanged: (value) {
                          context
                              .read<EnquiryCumQuatationBloc>()
                              .add(QuoNoEvent(number: value));
                        },
                        initialText: '',
                        hintText: 'Quo.No',
                      ),
                      QuotationDateECQWidget(),
                      QuotationDueDateECQWidget(),
                      KTextField(
                        multiline: true,
                        onChanged: (value) {
                          context
                              .read<EnquiryCumQuatationBloc>()
                              .add(ReasonQuoNotSentEvent(reason: value));
                        },
                        initialText: '',
                        hintText: 'Reason if Quo.is Not Sent',
                      ),
                      OrderRecivedDateECQWidget(),
                      KTextField(
                        multiline: true,
                        onChanged: (value) {
                          context
                              .read<EnquiryCumQuatationBloc>()
                              .add(RemarksEvent(remarks: value));
                        },
                        initialText: '',
                        hintText: 'Remarks',
                      ),
                    ]),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
